name: Build Kernel
on:
  workflow_dispatch:
    inputs:
      DEVICE_TARGET:
        description: 'Target device (default A045)'
        required: true
        default: a04
        type: choice
        options:
        - a04
        - a04e
      BRANCH:
        description: Branch
        default: ''
        required: true
      DEFCONFIG:
        description: Defconfig
        default: 'rsuntk_defconfig'
        required: true
      KBUILD_USER:
        description: Kbuild user
        default: 'rsuntk'
        required: true
      CLANG_NINETEEN:
        description: Use clang 18 (optional)
        type: boolean
      LLVM:
        description: Use LLVM=1 (optional)
        type: boolean
      LLVM_IAS:
        description: Use LLVM_IAS=1 (optional)
        type: boolean
      SETUP_KSU:
        description: KernelSU support (optional)
        type: boolean
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: rsuntkOrgs/android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}
        ref: ${{ github.event.inputs.BRANCH }}
        path: android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}
        show-progress: false
        fetch-depth: 1
        
    - name: Prepare dependencies
      run: |
        sudo apt update -y
        sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl curl lz4 -y
        sudo aptitude install libssl-dev -y
        
    - name: Fetch toolchains
      run: |
        mkdir toolchains
        cd toolchains
        if [[ ${{ github.event.inputs.CLANG_NINETEEN }} != "true" ]]; then
          git clone --depth=1 https://gitlab.com/Rissu-Projekt/toolchains/clang-toolchains.git clang-11
        else
          mkdir clang-18 && cd clang-18
          wget -q -O clang18.tar.gz https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
          tar -xf clang18.tar.gz && rm clang18.tar.gz && cd ..
        fi
        git clone --depth=1 https://github.com/VH-Devices/toolchains.git -b gcc-10.3.0 gcc-10
      working-directory: android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}

    - name: Prepare timezone fix
      run: |
        sudo rm /etc/localtime
        sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
          
    - name: Build kernel
      id: buildKernel
      run: |
        if [[ "${{ github.event.inputs.CLANG_NINETEEN }}" != "true" ]]; then
          export PATH=$(pwd)/toolchains/clang-11/bin:$PATH
        else
          export PATH=$(pwd)/toolchains/clang-18/bin:$PATH
        fi
        export CROSS_COMPILE=$(pwd)/toolchains/gcc-10/bin/aarch64-buildroot-linux-gnu-
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export DEFCONFIG="${{ github.event.inputs.DEFCONFIG }}"
        export COMPILE_WITH_LLVM="${{ github.event.inputs.LLVM }}"
        export COMPILE_WITH_IAS="${{ github.event.inputs.LLVM_IAS }}"
        export KBUILD_BUILD_HOST="rsuntk_orgs"
        export KBUILD_BUILD_USER="${{ github.event.inputs.KBUILD_USER }}"

        # do some checks
        echo ""
        echo ====================================================
        echo CROSS_COMPILE=$CROSS_COMPILE
        echo DEFCONFIG="${{ github.event.inputs.DEFCONFIG }}"
        echo CLANG="`clang -v 2>&1 | grep ' version ' | sed 's/[[:space:]]*$//'`"
        echo CLANG_TRIPLE=$CLANG_TRIPLE
        echo KBUILD_BUILD_USER=$KBUILD_BUILD_USER
        echo KBUILD_BUILD_HOST=$KBUILD_BUILD_HOST
        echo CURRENT_DIR=$(pwd)
        echo DATE=`date`
        echo TARGET_DEVICE="${{ github.event.inputs.DEVICE_TARGET }}"
        echo LLVM=$COMPILE_WITH_LLVM
        echo LLVM_IAS=$COMPILE_WITH_IAS
        echo ====================================================
        echo ""
        
        if [[ "${{ github.event.inputs.SETUP_KSU }}" = "true" ]]; then 
          export KERNELSU=true
        fi
        
        if [[ "${{ github.event.inputs.DEVICE_TARGET }}" = "a04" ]]; then
        	export DEVICE=A045F
        	export TARGET_PRODUCT=a04
        else
        	export DEVICE=A042F
        fi
        
        bash $(pwd)/build_kernel.sh
        echo ""
        echo "===================================================="
        strings out/arch/arm64/boot/Image | grep "Linux version"
        echo "===================================================="
        mv out/.config out/build_config.txt
        gitsha1=$(git rev-parse --short HEAD)
        buildDetails="`make kernelversion`-`echo $DEVICE`_`echo $gitsha1`-`date +'%Y%m%d%H%M%S'`" && echo "buildDetails=$buildDetails" >> $GITHUB_OUTPUT
      working-directory: android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}
      
    - name: Upload config
      uses: actions/upload-artifact@v4
      with:
        name: Config-${{ steps.buildKernel.outputs.buildDetails }}
        path: android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}/out/build_config.txt
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build-${{ steps.buildKernel.outputs.buildDetails }}
        path: |
          android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}/out/arch/arm64/boot/*.gz
          android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}/out/arch/arm64/boot/dts/mediatek/*.dtb
          
    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ steps.buildKernel.outputs.buildDetails }}
        path: |
          android_kernel_samsung_${{ github.event.inputs.DEVICE_TARGET }}/AnyKernel3/*
